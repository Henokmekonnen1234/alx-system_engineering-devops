#!/bin/bash
# Function to display information about a subdomain
display_info() {
  local subdomain="$1"
  local record_type="$2"
  local destination="$3"
  echo "The subdomain $subdomain is a $record_type record and points to $destination"
}

# Function to audit subdomains
audit_subdomains() {
  local domain="$1"

  # Default subdomains
  subdomains=("www" "lb-01" "web-01" "web-02")

  # Iterate through subdomains
  for subdomain in "${subdomains[@]}"; do
    # Retrieve DNS information
    dns_info=$(dig +short $subdomain.$domain)

    # Determine record type and destination
    if [ -n "$dns_info" ]; then
      record_type=$(echo "$dns_info" | awk 'NR==1{print "A"} NR>1{print "CNAME"}')
      destination=$(echo "$dns_info" | awk 'NR==1{print $1} NR>1{print $1}')
      display_info "$subdomain" "$record_type" "$destination"
    else
      echo "No DNS information found for $subdomain.$domain"
    fi
  done
}

# Main script logic
if [ "$#" -eq 1 ]; then
  # When only the domain parameter is provided
  audit_subdomains "$1"
elif [ "$#" -eq 2 ]; then
  # When both domain and subdomain parameters are provided
  subdomain="$2"
  dns_info=$(dig +short $subdomain.$1)
  if [ -n "$dns_info" ]; then
    record_type=$(echo "$dns_info" | awk 'NR==1{print "A"} NR>1{print "CNAME"}')
    destination=$(echo "$dns_info" | awk 'NR==1{print $1} NR>1{print $1}')
    display_info "$subdomain" "$record_type" "$destination"
  else
    echo "No DNS information found for $subdomain.$1"
  fi
else
  # Incorrect number of parameters
  echo "Usage: $0 domain [subdomain]"
fi

